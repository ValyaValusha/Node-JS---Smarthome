{"ast":null,"code":"import _regeneratorRuntime from \"/Users/c5276648/Documents/GitHub/Node-JS---Smarthome/frontend/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/c5276648/Documents/GitHub/Node-JS---Smarthome/frontend/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport axios from 'axios';\nvar serverUrl = 'http://localhost:3010';\nvar index = 3;\nvar devices = {\n  device1: {\n    id: 'device1',\n    name: 'Device #1',\n    address: '192.168.1.50',\n    port: 90,\n    state: 'on'\n  },\n  device2: {\n    id: 'device2',\n    name: 'Device #2',\n    address: '192.168.1.60',\n    port: 80,\n    state: 'off'\n  }\n};\nexport function getDevices() {\n  return _getDevices.apply(this, arguments);\n}\n\nfunction _getDevices() {\n  _getDevices = _asyncToGenerator(\n  /*#__PURE__*/\n  _regeneratorRuntime.mark(function _callee() {\n    var response;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return axios.get(\"\".concat(serverUrl, \"/devices\"));\n\n          case 2:\n            response = _context.sent;\n            return _context.abrupt(\"return\", response.data);\n\n          case 4:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n  return _getDevices.apply(this, arguments);\n}\n\nexport function getDeviceById(_x) {\n  return _getDeviceById.apply(this, arguments);\n}\n\nfunction _getDeviceById() {\n  _getDeviceById = _asyncToGenerator(\n  /*#__PURE__*/\n  _regeneratorRuntime.mark(function _callee2(deviceId) {\n    var response;\n    return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            _context2.next = 2;\n            return axios.get(\"\".concat(serverUrl, \"/devices/\").concat(deviceId));\n\n          case 2:\n            response = _context2.sent;\n            return _context2.abrupt(\"return\", response.data);\n\n          case 4:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, _callee2);\n  }));\n  return _getDeviceById.apply(this, arguments);\n}\n\nexport function addDevice(_x2) {\n  return _addDevice.apply(this, arguments);\n}\n\nfunction _addDevice() {\n  _addDevice = _asyncToGenerator(\n  /*#__PURE__*/\n  _regeneratorRuntime.mark(function _callee3(device) {\n    return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n      while (1) {\n        switch (_context3.prev = _context3.next) {\n          case 0:\n            return _context3.abrupt(\"return\", axios.post(\"\".concat(serverUrl, \"/devices\"), device));\n\n          case 1:\n          case \"end\":\n            return _context3.stop();\n        }\n      }\n    }, _callee3);\n  }));\n  return _addDevice.apply(this, arguments);\n}\n\nexport function removeDevice(_x3) {\n  return _removeDevice.apply(this, arguments);\n}\n\nfunction _removeDevice() {\n  _removeDevice = _asyncToGenerator(\n  /*#__PURE__*/\n  _regeneratorRuntime.mark(function _callee4(deviceId) {\n    return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n      while (1) {\n        switch (_context4.prev = _context4.next) {\n          case 0:\n            return _context4.abrupt(\"return\", axios.delete(\"\".concat(serverUrl, \"/devices/\").concat(deviceId)));\n\n          case 1:\n          case \"end\":\n            return _context4.stop();\n        }\n      }\n    }, _callee4);\n  }));\n  return _removeDevice.apply(this, arguments);\n}\n\nexport function updateDevice(_x4, _x5) {\n  return _updateDevice.apply(this, arguments);\n}\n\nfunction _updateDevice() {\n  _updateDevice = _asyncToGenerator(\n  /*#__PURE__*/\n  _regeneratorRuntime.mark(function _callee5(deviceId, data) {\n    return _regeneratorRuntime.wrap(function _callee5$(_context5) {\n      while (1) {\n        switch (_context5.prev = _context5.next) {\n          case 0:\n            return _context5.abrupt(\"return\", axios.put(\"\".concat(serverUrl, \"/devices/\").concat(deviceId), data));\n\n          case 1:\n          case \"end\":\n            return _context5.stop();\n        }\n      }\n    }, _callee5);\n  }));\n  return _updateDevice.apply(this, arguments);\n}\n\nexport function updateDeviceState(_x6, _x7) {\n  return _updateDeviceState.apply(this, arguments);\n}\n\nfunction _updateDeviceState() {\n  _updateDeviceState = _asyncToGenerator(\n  /*#__PURE__*/\n  _regeneratorRuntime.mark(function _callee6(deviceId, data) {\n    return _regeneratorRuntime.wrap(function _callee6$(_context6) {\n      while (1) {\n        switch (_context6.prev = _context6.next) {\n          case 0:\n            return _context6.abrupt(\"return\", axios.put(\"\".concat(serverUrl, \"/devices/log/\").concat(deviceId), data));\n\n          case 1:\n          case \"end\":\n            return _context6.stop();\n        }\n      }\n    }, _callee6);\n  }));\n  return _updateDeviceState.apply(this, arguments);\n}\n\nexport function switchOn(_x8) {\n  return _switchOn.apply(this, arguments);\n}\n\nfunction _switchOn() {\n  _switchOn = _asyncToGenerator(\n  /*#__PURE__*/\n  _regeneratorRuntime.mark(function _callee7(deviceId) {\n    return _regeneratorRuntime.wrap(function _callee7$(_context7) {\n      while (1) {\n        switch (_context7.prev = _context7.next) {\n          case 0:\n            _context7.next = 2;\n            return updateDeviceState(deviceId, {\n              state: 'on'\n            });\n\n          case 2:\n          case \"end\":\n            return _context7.stop();\n        }\n      }\n    }, _callee7);\n  }));\n  return _switchOn.apply(this, arguments);\n}\n\nexport function switchOff(_x9) {\n  return _switchOff.apply(this, arguments);\n}\n\nfunction _switchOff() {\n  _switchOff = _asyncToGenerator(\n  /*#__PURE__*/\n  _regeneratorRuntime.mark(function _callee8(deviceId) {\n    return _regeneratorRuntime.wrap(function _callee8$(_context8) {\n      while (1) {\n        switch (_context8.prev = _context8.next) {\n          case 0:\n            _context8.next = 2;\n            return updateDeviceState(deviceId, {\n              state: 'off'\n            });\n\n          case 2:\n          case \"end\":\n            return _context8.stop();\n        }\n      }\n    }, _callee8);\n  }));\n  return _switchOff.apply(this, arguments);\n}\n\nexport function getDeviceLog(_x10) {\n  return _getDeviceLog.apply(this, arguments);\n}\n\nfunction _getDeviceLog() {\n  _getDeviceLog = _asyncToGenerator(\n  /*#__PURE__*/\n  _regeneratorRuntime.mark(function _callee9(deviceId) {\n    var response;\n    return _regeneratorRuntime.wrap(function _callee9$(_context9) {\n      while (1) {\n        switch (_context9.prev = _context9.next) {\n          case 0:\n            _context9.next = 2;\n            return axios.get(\"\".concat(serverUrl, \"/devices/log/\").concat(deviceId));\n\n          case 2:\n            response = _context9.sent;\n            return _context9.abrupt(\"return\", response.data);\n\n          case 4:\n          case \"end\":\n            return _context9.stop();\n        }\n      }\n    }, _callee9);\n  }));\n  return _getDeviceLog.apply(this, arguments);\n}\n\nexport function postGroup(_x11) {\n  return _postGroup.apply(this, arguments);\n}\n\nfunction _postGroup() {\n  _postGroup = _asyncToGenerator(\n  /*#__PURE__*/\n  _regeneratorRuntime.mark(function _callee10(data) {\n    var response;\n    return _regeneratorRuntime.wrap(function _callee10$(_context10) {\n      while (1) {\n        switch (_context10.prev = _context10.next) {\n          case 0:\n            _context10.next = 2;\n            return axios.post(\"\".concat(serverUrl, \"/groups\"), data);\n\n          case 2:\n            response = _context10.sent;\n            return _context10.abrupt(\"return\", response.data);\n\n          case 4:\n          case \"end\":\n            return _context10.stop();\n        }\n      }\n    }, _callee10);\n  }));\n  return _postGroup.apply(this, arguments);\n}","map":{"version":3,"sources":["/Users/c5276648/Documents/GitHub/Node-JS---Smarthome/frontend/src/api.js"],"names":["axios","serverUrl","index","devices","device1","id","name","address","port","state","device2","getDevices","get","response","data","getDeviceById","deviceId","addDevice","device","post","removeDevice","delete","updateDevice","put","updateDeviceState","switchOn","switchOff","getDeviceLog","postGroup"],"mappings":"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","sourcesContent":["import axios from 'axios';\n\nconst serverUrl = 'http://localhost:3010';\nlet index = 3;\nlet devices = {\n    device1: {\n        id: 'device1',\n        name: 'Device #1',\n        address: '192.168.1.50',\n        port: 90,\n        state: 'on'\n    },\n    device2: {\n        id: 'device2',\n        name: 'Device #2',\n        address: '192.168.1.60',\n        port: 80,\n        state: 'off'\n    }\n};\n\nexport async function getDevices() {\n    const response = await axios.get(`${serverUrl}/devices`);\n    return response.data;\n}\n\nexport async function getDeviceById(deviceId) {\n    const response = await axios.get(`${serverUrl}/devices/${deviceId}`);\n    return response.data;\n}\n\nexport async function addDevice(device) {\n    return axios.post(`${serverUrl}/devices`, device);\n}\n\nexport async function removeDevice(deviceId) {\n    return axios.delete(`${serverUrl}/devices/${deviceId}`);\n}\n\nexport async function updateDevice(deviceId, data) {\n    return axios.put(`${serverUrl}/devices/${deviceId}`, data);\n}\n\nexport async function updateDeviceState(deviceId, data) {\n    return axios.put(`${serverUrl}/devices/log/${deviceId}`, data);\n}\n\nexport async function switchOn(deviceId) {\n    await updateDeviceState(deviceId, {\n        state: 'on'\n    });\n}\n\nexport async function switchOff(deviceId) {\n    await updateDeviceState(deviceId, {\n        state: 'off'\n    });\n}\n\nexport async function getDeviceLog(deviceId) {\n    const response = await axios.get(`${serverUrl}/devices/log/${deviceId}`);\n    return response.data;\n}\n\nexport async function postGroup(data) {\n    const response = await axios.post(`${serverUrl}/groups`, data);\n    return response.data;\n}"]},"metadata":{},"sourceType":"module"}