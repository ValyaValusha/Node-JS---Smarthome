{"ast":null,"code":"import _objectSpread from \"/Users/c5276648/Documents/GitHub/Node-JS---Smarthome/frontend/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _regeneratorRuntime from \"/Users/c5276648/Documents/GitHub/Node-JS---Smarthome/frontend/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/c5276648/Documents/GitHub/Node-JS---Smarthome/frontend/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"/Users/c5276648/Documents/GitHub/Node-JS---Smarthome/frontend/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/c5276648/Documents/GitHub/Node-JS---Smarthome/frontend/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/c5276648/Documents/GitHub/Node-JS---Smarthome/frontend/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/c5276648/Documents/GitHub/Node-JS---Smarthome/frontend/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/c5276648/Documents/GitHub/Node-JS---Smarthome/frontend/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/c5276648/Documents/GitHub/Node-JS---Smarthome/frontend/src/components/GroupForm.jsx\";\nimport React, { PureComponent } from 'react';\nimport PropTypes from 'prop-types';\nimport { devicePropType } from '../constants';\nimport { getDevices } from '../api';\n\nvar GroupForm =\n/*#__PURE__*/\nfunction (_PureComponent) {\n  _inherits(GroupForm, _PureComponent);\n\n  function GroupForm(props) {\n    var _this;\n\n    _classCallCheck(this, GroupForm);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(GroupForm).call(this, props));\n    _this.refreshDevices =\n    /*#__PURE__*/\n    _asyncToGenerator(\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee() {\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.t0 = _this;\n              _context.next = 3;\n              return getDevices();\n\n            case 3:\n              _context.t1 = _context.sent;\n              _context.t2 = {\n                devices: _context.t1\n              };\n\n              _context.t0.setState.call(_context.t0, _context.t2);\n\n            case 6:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    _this.handleCancelClick = function () {\n      window.history.back();\n    };\n\n    _this.handleSubmit = function (event) {\n      _this.props.onSubmit(_objectSpread({}, _this.props.group, {\n        name: event.target.groupName.value // address: event.target.deviceAddress.value,\n        // port: parseInt(event.target.devicePort.value, 10)\n\n      }));\n\n      event.preventDefault();\n    };\n\n    _this.addDevice = function (event) {\n      _this.state.devicesAll.push(event.target);\n\n      console.log(_this.state);\n      event.preventDefault();\n    };\n\n    _this.state = {\n      devices: [],\n      devicesAll: []\n    };\n    return _this;\n  }\n\n  _createClass(GroupForm, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.refreshDevices();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var group = this.props.group;\n      return React.createElement(React.Fragment, null, React.createElement(\"form\", {\n        onSubmit: this.handleSubmit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"form-group\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        htmlFor: \"groupName\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54\n        },\n        __self: this\n      }, \"Group Name\"), React.createElement(\"input\", {\n        type: \"text\",\n        className: \"form-control\",\n        id: \"groupName\",\n        name: \"groupName\",\n        placeholder: \"Group Name\",\n        required: true //    defaultValue={group.name}\n        ,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"form-group\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        htmlFor: \"selectDevice\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66\n        },\n        __self: this\n      }, \"Add device to group\"), React.createElement(\"select\", {\n        className: \"form-control\",\n        id: \"selectDevice\",\n        name: \"selectDevice\",\n        placeholder: \"Select device to group\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67\n        },\n        __self: this\n      }, this.state.devices.map(function (device, index) {\n        return React.createElement(\"option\", {\n          key: device.id,\n          onClick: function onClick() {\n            _this2.state.devicesAll.push(device.id);\n\n            console.log(_this2.state.devicesAll);\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 72\n          },\n          __self: this\n        }, \" \", device.name);\n      }))), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        type: \"button\",\n        className: \"btn btn-secondary\",\n        onClick: this.addDevice,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78\n        },\n        __self: this\n      }, \"Add Device\")), React.createElement(\"div\", {\n        className: \"float-right\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        type: \"submit\",\n        className: \"btn btn-primary mr-2\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82\n        },\n        __self: this\n      }, \"Submit\"), React.createElement(\"button\", {\n        type: \"button\",\n        className: \"btn btn-default\",\n        onClick: this.handleCancelClick,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83\n        },\n        __self: this\n      }, \"Cancel\"))));\n    }\n  }]);\n\n  return GroupForm;\n}(PureComponent);\n\nexport { GroupForm as default };\nGroupForm.defaultProps = {\n  device: {\n    name: '',\n    address: '',\n    port: 80\n  }\n};\nGroupForm.propTypes = {\n  device: devicePropType,\n  onSubmit: PropTypes.func.isRequired\n};","map":{"version":3,"sources":["/Users/c5276648/Documents/GitHub/Node-JS---Smarthome/frontend/src/components/GroupForm.jsx"],"names":["React","PureComponent","PropTypes","devicePropType","getDevices","GroupForm","props","refreshDevices","devices","setState","handleCancelClick","window","history","back","handleSubmit","event","onSubmit","group","name","target","groupName","value","preventDefault","addDevice","state","devicesAll","push","console","log","map","device","index","id","defaultProps","address","port","propTypes","func","isRequired"],"mappings":"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","sourcesContent":["import React, { PureComponent } from 'react';\nimport PropTypes from 'prop-types';\nimport { devicePropType } from '../constants';\nimport {getDevices} from '../api';\n\nexport default class GroupForm extends PureComponent {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            devices: [],\n            devicesAll: []\n        }\n    }\n\n    componentDidMount() {\n        this.refreshDevices();\n    }\n\n    refreshDevices = async () => {\n        this.setState({\n            devices: await getDevices()\n        });\n    };\n\n    handleCancelClick = () => {\n        window.history.back();\n    };\n\n    handleSubmit = (event) => {\n        this.props.onSubmit({\n            ...this.props.group,\n            name: event.target.groupName.value,\n            // address: event.target.deviceAddress.value,\n            // port: parseInt(event.target.devicePort.value, 10)\n        });\n\n        event.preventDefault();\n    };\n\n    addDevice = (event) => {\n        this.state.devicesAll.push(event.target);\n        console.log(this.state);\n        event.preventDefault();\n    }\n\n    render() {\n        const {group} = this.props;\n\n        return (\n            <>\n            <form onSubmit={this.handleSubmit}>\n                <div className=\"form-group\">\n                    <label htmlFor=\"groupName\">Group Name</label>\n                    <input type=\"text\"\n                           className=\"form-control\"\n                           id=\"groupName\"\n                           name=\"groupName\"\n                           placeholder=\"Group Name\"\n                           required\n                        //    defaultValue={group.name}\n                           />\n                </div>\n\n                <div className=\"form-group\">\n                    <label htmlFor=\"selectDevice\">Add device to group</label>\n                    <select className=\"form-control\" \n                            id=\"selectDevice\" \n                            name=\"selectDevice\" \n                            placeholder=\"Select device to group\">\n                        {this.state.devices.map((device, index) =>\n                                <option key={device.id} onClick={() => {this.state.devicesAll.push(device.id);console.log(this.state.devicesAll)}}> {device.name}</option>\n                        )}\n                    </select>\n                </div>\n\n                <div>\n                        <button type=\"button\" className=\"btn btn-secondary\" onClick={this.addDevice}>Add Device</button>\n                </div>\n\n                <div className=\"float-right\">\n                    <button type=\"submit\" className=\"btn btn-primary mr-2\">Submit</button>\n                    <button type=\"button\" className=\"btn btn-default\" onClick={this.handleCancelClick}>Cancel</button>\n                </div>\n            </form>\n            </>\n        );\n    }\n}\n\nGroupForm.defaultProps = {\n    device: {\n        name: '',\n        address: '',\n        port: 80\n    }\n};\n\nGroupForm.propTypes = {\n    device: devicePropType,\n    onSubmit: PropTypes.func.isRequired\n};"]},"metadata":{},"sourceType":"module"}