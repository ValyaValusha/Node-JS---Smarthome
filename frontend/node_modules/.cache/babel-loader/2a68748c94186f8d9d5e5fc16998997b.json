{"ast":null,"code":"import _toConsumableArray from \"/Users/c5276648/Documents/GitHub/Node-JS---Smarthome/frontend/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _objectSpread from \"/Users/c5276648/Documents/GitHub/Node-JS---Smarthome/frontend/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _regeneratorRuntime from \"/Users/c5276648/Documents/GitHub/Node-JS---Smarthome/frontend/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/c5276648/Documents/GitHub/Node-JS---Smarthome/frontend/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"/Users/c5276648/Documents/GitHub/Node-JS---Smarthome/frontend/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/c5276648/Documents/GitHub/Node-JS---Smarthome/frontend/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/c5276648/Documents/GitHub/Node-JS---Smarthome/frontend/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/c5276648/Documents/GitHub/Node-JS---Smarthome/frontend/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/c5276648/Documents/GitHub/Node-JS---Smarthome/frontend/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/c5276648/Documents/GitHub/Node-JS---Smarthome/frontend/src/components/GroupForm.jsx\";\nimport React, { PureComponent } from 'react';\nimport PropTypes from 'prop-types';\nimport { groupPropType } from '../constants';\nimport { getDevices, addDeviceToGroup } from '../api';\n\nvar GroupForm =\n/*#__PURE__*/\nfunction (_PureComponent) {\n  _inherits(GroupForm, _PureComponent);\n\n  function GroupForm(props) {\n    var _this;\n\n    _classCallCheck(this, GroupForm);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(GroupForm).call(this, props));\n    _this.refreshDevices =\n    /*#__PURE__*/\n    _asyncToGenerator(\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee() {\n      var selected;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              selected = _this.props.group.devices.length ? _this.props.group.devices : [];\n              _context.t0 = _this;\n              _context.next = 4;\n              return getDevices();\n\n            case 4:\n              _context.t1 = _context.sent;\n              _context.t2 = selected;\n              _context.t3 = {\n                devices: _context.t1,\n                selectedDevices: _context.t2\n              };\n\n              _context.t0.setState.call(_context.t0, _context.t3);\n\n            case 8:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    _this.handleCancelClick = function () {\n      window.history.back();\n    };\n\n    _this.handleSubmit = function (event) {\n      _this.props.onSubmit(_objectSpread({}, _this.props.group, {\n        name: event.target.groupName.value,\n        devices: _this.state.selectedDevices\n      }));\n\n      event.preventDefault();\n    };\n\n    _this.checkDeviceUniq = function (event) {\n      var _this$state = _this.state,\n          selectedDevices = _this$state.selectedDevices,\n          devices = _this$state.devices;\n      var selectedIndex = event.target.selectedIndex;\n      var findDevice = selectedDevices.findIndex(function (device) {\n        return device.id === devices[selectedIndex].id;\n      });\n      return findDevice === -1 ? _this.addSelectedDevice(selectedIndex) : 1;\n    };\n\n    _this.addSelectedDevice =\n    /*#__PURE__*/\n    function () {\n      var _ref2 = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee2(index) {\n        var _this$state2, selectedDevices, devices;\n\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                _this$state2 = _this.state, selectedDevices = _this$state2.selectedDevices, devices = _this$state2.devices;\n                _context2.next = 3;\n                return addDeviceToGroup(_this.props.group.id, devices[index]);\n\n              case 3:\n                _this.setState({\n                  selectedDevices: [].concat(_toConsumableArray(selectedDevices), [devices[index]])\n                });\n\n              case 4:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2);\n      }));\n\n      return function (_x) {\n        return _ref2.apply(this, arguments);\n      };\n    }();\n\n    _this.deleteSelected = function (event) {\n      var selectedDevices = _this.state.selectedDevices;\n      var selectedId = event.currentTarget.attributes.getNamedItem('data-id').value;\n      var newArray = selectedDevices.filter(function (device) {\n        return device.id !== selectedId;\n      });\n\n      _this.setState({\n        selectedDevices: newArray\n      });\n\n      event.preventDefault();\n    };\n\n    _this.state = {\n      devices: [],\n      selectedDevices: []\n    };\n    return _this;\n  }\n\n  _createClass(GroupForm, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.refreshDevices();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var group = this.props.group;\n      var _this$state3 = this.state,\n          devices = _this$state3.devices,\n          selectedDevices = _this$state3.selectedDevices;\n      return React.createElement(\"form\", {\n        onSubmit: this.handleSubmit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"form-group\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        htmlFor: \"groupName\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72\n        },\n        __self: this\n      }, \"Group Name\"), React.createElement(\"input\", {\n        type: \"text\",\n        className: \"form-control\",\n        id: \"groupName\",\n        name: \"groupName\",\n        placeholder: \"Group Name\",\n        defaultValue: group.name,\n        required: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"form-group\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        htmlFor: \"selectDevice\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83\n        },\n        __self: this\n      }, \"Add device to group\"), React.createElement(\"select\", {\n        className: \"form-control\",\n        id: \"selectDevice\",\n        name: \"selectDevice\",\n        placeholder: \"Select device to group\",\n        onChange: this.checkDeviceUniq,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84\n        },\n        __self: this\n      }, devices.map(function (device, index) {\n        return React.createElement(\"option\", {\n          key: device.id,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 90\n          },\n          __self: this\n        }, \" \", device.name);\n      }))), React.createElement(\"ul\", {\n        className: \"list-group\",\n        style: {\n          margin: '1.5rem 0'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95\n        },\n        __self: this\n      }, selectedDevices.length > 0 && selectedDevices.map(function (device, index) {\n        return React.createElement(\"li\", {\n          className: \"list-group-item disabled\",\n          key: device.id,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 98\n          },\n          __self: this\n        }, device.name, React.createElement(\"button\", {\n          type: \"button\",\n          \"data-id\": device.id,\n          className: \"close\",\n          \"aria-label\": \"Close\",\n          onClick: _this2.deleteSelected,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 100\n          },\n          __self: this\n        }, React.createElement(\"span\", {\n          \"aria-hidden\": \"true\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 101\n          },\n          __self: this\n        }, \"\\xD7\")));\n      })), React.createElement(\"div\", {\n        className: \"float-right\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 107\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        type: \"submit\",\n        className: \"btn btn-primary mr-2\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 108\n        },\n        __self: this\n      }, \"Submit\"), React.createElement(\"button\", {\n        type: \"button\",\n        className: \"btn btn-default\",\n        onClick: this.handleCancelClick,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 109\n        },\n        __self: this\n      }, \"Cancel\")));\n    }\n  }]);\n\n  return GroupForm;\n}(PureComponent);\n\nexport { GroupForm as default };\nGroupForm.defaultProps = {\n  group: {\n    name: '',\n    devices: []\n  }\n};\nGroupForm.propTypes = {\n  group: groupPropType,\n  onSubmit: PropTypes.func.isRequired\n};","map":{"version":3,"sources":["/Users/c5276648/Documents/GitHub/Node-JS---Smarthome/frontend/src/components/GroupForm.jsx"],"names":["React","PureComponent","PropTypes","groupPropType","getDevices","addDeviceToGroup","GroupForm","props","refreshDevices","selected","group","devices","length","selectedDevices","setState","handleCancelClick","window","history","back","handleSubmit","event","onSubmit","name","target","groupName","value","state","preventDefault","checkDeviceUniq","selectedIndex","findDevice","findIndex","device","id","addSelectedDevice","index","deleteSelected","selectedId","currentTarget","attributes","getNamedItem","newArray","filter","map","margin","defaultProps","propTypes","func","isRequired"],"mappings":"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","sourcesContent":["import React, { PureComponent } from 'react';\nimport PropTypes from 'prop-types';\nimport { groupPropType } from '../constants';\nimport { getDevices, addDeviceToGroup } from '../api';\n\nexport default class GroupForm extends PureComponent {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            devices: [],\n            selectedDevices: []\n        }\n    }\n\n    componentDidMount() {\n        this.refreshDevices();\n    }\n\n    refreshDevices = async () => {\n        let selected = (this.props.group.devices.length) ? this.props.group.devices : []\n        this.setState({\n            devices: await getDevices(),\n            selectedDevices: selected\n        });\n    };\n\n    handleCancelClick = () => {\n        window.history.back();\n    };\n\n    handleSubmit = (event) => {\n        this.props.onSubmit({\n            ...this.props.group,\n            name: event.target.groupName.value,\n            devices: this.state.selectedDevices\n        });\n        event.preventDefault();\n    };\n\n    checkDeviceUniq = (event) => {\n        let { selectedDevices, devices } = this.state;\n        let { selectedIndex } = event.target;\n        let findDevice = selectedDevices.findIndex(device => device.id === devices[selectedIndex].id);\n        return (findDevice === -1) ? this.addSelectedDevice(selectedIndex): 1;  \n    }\n\n    addSelectedDevice = async (index) => {\n        let { selectedDevices, devices } = this.state;\n        await addDeviceToGroup(this.props.group.id, devices[index]);\n        this.setState({selectedDevices: [...selectedDevices, devices[index] ]});\n    }\n\n    deleteSelected = (event) => {\n        let { selectedDevices } = this.state;\n        let selectedId = event.currentTarget.attributes.getNamedItem('data-id').value;\n        let newArray = selectedDevices.filter(function(device) {\n            return device.id !== selectedId;\n        });\n        this.setState({selectedDevices: newArray});\n        event.preventDefault();\n    }\n\n\n    render() {\n        const { group } = this.props;\n        let { devices, selectedDevices } = this.state;\n\n        return (\n            <form onSubmit={this.handleSubmit}>\n                <div className=\"form-group\">\n                    <label htmlFor=\"groupName\">Group Name</label>\n                    <input type=\"text\"\n                           className=\"form-control\"\n                           id=\"groupName\"\n                           name=\"groupName\"\n                           placeholder=\"Group Name\"\n                           defaultValue = {group.name}\n                           required/>\n                </div>\n\n                <div className=\"form-group\">\n                    <label htmlFor=\"selectDevice\">Add device to group</label>\n                    <select className=\"form-control\" \n                            id=\"selectDevice\" \n                            name=\"selectDevice\" \n                            placeholder=\"Select device to group\"\n                            onChange = {this.checkDeviceUniq}>\n                        {devices.map((device, index) =>\n                            <option key={device.id}> {device.name}</option>\n                        )}\n                    </select>\n                </div>\n\n                <ul className=\"list-group\" style={{margin :'1.5rem 0'}}>\n                    {selectedDevices.length > 0   &&\n                    selectedDevices.map((device, index) =>\n                        <li className=\"list-group-item disabled\" key={device.id}> \n                            {device.name}\n                            <button type=\"button\" data-id={device.id} className=\"close\" aria-label=\"Close\" onClick={this.deleteSelected}>\n                                <span aria-hidden=\"true\">&times;</span>\n                            </button>\n                        </li>\n                    )}\n                </ul>\n\n                <div className=\"float-right\">\n                    <button type=\"submit\" className=\"btn btn-primary mr-2\">Submit</button>\n                    <button type=\"button\" className=\"btn btn-default\" onClick={this.handleCancelClick}>Cancel</button>\n                </div>\n            </form>\n        );\n    }\n}\n\nGroupForm.defaultProps = {\n    group: {\n        name: '',\n        devices: []\n    }\n};\n\nGroupForm.propTypes = {\n    group: groupPropType,\n    onSubmit: PropTypes.func.isRequired\n};"]},"metadata":{},"sourceType":"module"}